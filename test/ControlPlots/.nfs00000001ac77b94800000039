void analyseYield_p1(const char* WHICHHIST, const char* NTUPLEWEIGHT, const char* MOMCORRTYPE) {

  // directory with data
  TString protocol = "file://";
  // TString protocol = "root://xrootd.rcac.purdue.edu/";
//from Norbert root://xrootd.rcac.purdue.edu//store/group/ewk/DY/DYM20/ntuple_skim_96_2_z5w.root my.root
  //TString protocol = "dcap://dcache.rcac.purdue.edu:22125/pnfs/rcac.purdue.edu/data"; 
  TString dirname = "/scratch/lustreA/a/asvyatko/DY2013/rootfiles/";
  //TString dirname = "/scratch/scratch95/a/asvyatko/DY2012_testdir/rootfiles/";
  //TString dirname = "/store/group/ewk/DY/";
  //TString dirname = "/mnt/hadoop/store/user/asvyatko/DYstudy/dataAnalysis13/rootfiles/";

  // data
  TFileCollection* c1 = new TFileCollection("data","data");
  //FIXME splitting by runs/eras is happening here switch to RunAB, RunC, RunD
  if (MOMCORRTYPE == "RunAB") c1->Add(protocol+dirname+"Data_RunAAug06"+"/*.root");
  if (MOMCORRTYPE == "RunAB") c1->Add(protocol+dirname+"Data_RunAJune13"+"/*.root");
  if (MOMCORRTYPE == "RunAB") c1->Add(protocol+dirname+"Data_RunBJune13"+"/*.root");
  if (MOMCORRTYPE == "RunC") c1->Add(protocol+dirname+"Data_RunCAug24"+"/*.root");
  if (MOMCORRTYPE == "RunC") c1->Add(protocol+dirname+"Data_RunCPRv2"+"/*.root");
  if (MOMCORRTYPE == "RunD") c1->Add(protocol+dirname+"Data_RunDPRv1"+"/*.root");

  gEnv->SetValue("ProofLite.Sandbox", "/home/asvyatko/DYStudy/CMSSW_5_3_3_patch2/src/DimuonAnalysis/DYPackage/test/ControlPlots/proofbox_p1/");
  TProof* p = TProof::Open("workers=20"); ////proof://pccmspurdue3:-1"); // set number of works to 2:  TProof::Open("//lite:///?workers=2");
  p->RegisterDataSet("DATA", c1,"OV");

  p->ShowDataSets();
  TObjString* useNtupleWeightFlag = new TObjString(NTUPLEWEIGHT);
  p->AddInput(new TNamed("useNtupleWeightFlag",NTUPLEWEIGHT));

  TObjString* histogramThis = new TObjString(WHICHHIST);
  p->AddInput(new TNamed("histogramThis",WHICHHIST));

  TObjString* momCorrType = new TObjString(MOMCORRTYPE);
  p->AddInput(new TNamed("momCorrType",MOMCORRTYPE));

  gROOT->Time();
  p->SetParameter("PROOF_LookupOpt", "all");
  p->Process("DATA#/recoTree/DiMuonTree","EventSelector_CP.C+");

}
